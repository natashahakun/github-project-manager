{"version":3,"sources":["actions/ui.actions.js","services/githubApiService.js","services/apiKeyService.js","services/issuesPriorityService.js","actions/issues.actions.js","reducers/issues.reducer.js","reducers/repos.reducer.js","reducers/ui.reducer.js","actions/user.actions.js","actions/repos.actions.js","reducers/user.reducer.js","reducers/rootReducer.js","store.js","components/Button/Button.js","components/Heading/Heading.js","components/Input/Input.jsx","selectors/issues.selectors.js","components/IssuesTable/IssuesTable.js","components/LinkWrapper/LinkWrapper.js","components/LoadingIndicator/LoadingIndicator.js","components/Login/Login.js","components/NativeSelect/NativeSelect.js","components/Notification/Notification.js","views/Dashboard/Dashboard.js","App.js","index.js"],"names":["setError","error","dispatch","type","payload","setTimeout","setLoading","loading","githubApiService","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","path","apiKey","url","headers","response","body","wrap","_context","prev","next","concat","Headers","append","fetch","sent","json","status","Error","message","abrupt","stop","_x","_x2","apply","this","arguments","apiKeyService","set","sessionStorage","setItem","get","getItem","issuesPriorityService","currentRepoName","issuePriorities","issuesById","reduce","map","obj","id","priority","_this","JSON","stringify","repoName","getIssues","getState","_getState","user","githubUsername","getIssuesPriorities","t0","increasePriority","issueId","setIssuesPriorities","decreasePriority","issuesPriorities","parse","issues","INITIAL_STATE","getUser","login","combineReducers","state","length","undefined","action","toConsumableArray","issue","index","objectSpread","issueIncreased","find","issueNegativelyImpacted","issueDecreased","issuePositivelyImpacted","repos","name","ui","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Button","accessibleText","buttonType","children","selected","props","objectWithoutProperties","react_default","createElement","assign","className","classNames","button--primary","button--secondary","button--icon","button--selected","defaultProps","Heading","Input","focused","setLabelTop","value","_this2","_this$props","label","handleOnChange","inputProps","input-wrapper__label--top","htmlFor","onChange","onFocus","setState","onBlur","Component","issuesSelector","sortByPriority","b","issuesSortedByPriority","createSelector","sort","repoHasIssues","connect","bindActionCreators","key","assignee","src","avatar_url","alt","title","moment","created_at","format","updated_at","fromNow","components_Button_Button","disabled","onClick","LinkWrapper","LoadingIndicator_LoadingIndicator","Login","handleSubmit","event","preventDefault","components_Heading_Heading","onSubmit","components_Input_Input","target","components_LinkWrapper_LinkWrapper","href","rel","NativeSelect","options","option","Notification","_ref2","hasIssues","_useState","useState","_useState2","slicedToArray","selectedRepo","setSelectedRepo","dashboard--center","dashboard--left","components_NativeSelect_NativeSelect","repoId","parseInt","repo","style","animationDuration","Fragment","components_IssuesTable_IssuesTable","App","checkedExisting","existingApiKey","errorMessage","isLoading","components_Notification_Notification","views_Dashboard_Dashboard","components_Login_Login","ReactDOM","render","es","store","createStore","rootReducer","applyMiddleware","thunk","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d0a7e0d0.chunk.js","sourcesContent":["export const SET_ERROR = 'SET_ERROR';\nexport const SET_LOADING = 'SET_LOADING';\n\nexport const setError = error => dispatch => {\n    dispatch({ type: SET_ERROR, payload: error });\n    setTimeout(() => dispatch({ type: SET_ERROR, payload: '' }), 5000);\n};\n\nexport const setLoading = loading => dispatch => {\n    dispatch({ type: SET_LOADING, payload: loading});\n};\n","const githubApiService = async (path, apiKey) => {\n    const url = `https://api.github.com/${path}`;\n    const headers = new Headers();\n    headers.append('Authorization', `token ${apiKey}`)\n    const response = await fetch(url, {\n        headers: headers\n    });\n\n    const body = await response.json();\n    if (response.status !== 200) {\n        throw new Error(body.message)\n    }\n\n    return body;\n};\n\nexport default githubApiService;\n","class ApiKeyService {\n    set = apiKey => sessionStorage.setItem('gh-api-key', apiKey);\n    get = () => sessionStorage.getItem('gh-api-key');\n}\n\nexport default new ApiKeyService();\n","class IssuesPriorityService {\n    currentRepoName = null;\n\n    set = issuePriorities => {\n        const issuesById = issuePriorities.reduce((map, obj) => {\n            map[obj.id] = obj.priority;\n            return map;\n        }, {});\n        sessionStorage.setItem(`issues-priorities-${this.currentRepoName}`, JSON.stringify(issuesById));\n    }\n\n    get = repoName => {\n        this.currentRepoName = repoName;\n        return sessionStorage.getItem(`issues-priorities-${repoName}`);\n    }\n}\n\nexport default new IssuesPriorityService();\n","import { setError, setLoading } from './ui.actions';\nimport { issuesPriorityService, githubApiService } from '../services';\n\nexport const GET_ISSUES_REQUEST = 'GET_ISSUES_REQUEST';\nexport const GET_ISSUES_SUCCESS = 'GET_ISSUES_SUCCESS';\nexport const GET_ISSUES_FAILURE = 'GET_ISSUES_FAILURE';\n\nexport const INCREASE_PRIORITY = 'INCREASE_PRIORITY';\nexport const DECREASE_PRIORITY = 'DECREASE_PRIORITY';\n\nexport const GET_ISSUES_PRIORITIES = 'GET_ISSUES_PRIORITIES';\nexport const SET_ISSUES_PRIORITIES = 'SET_ISSUES_PRIORITIES';\n\nexport const getIssues = repoName => async (dispatch, getState) => {\n    const { user } = getState();\n\n    dispatch({ type: GET_ISSUES_REQUEST });\n    dispatch(setLoading(true));\n\n    try {\n        const body = await githubApiService(`repos/${user.githubUsername}/${repoName}/issues`, user.apiKey);\n\n        dispatch({\n            type: GET_ISSUES_SUCCESS,\n            payload: body\n        });\n        dispatch(setLoading(false));\n        dispatch(getIssuesPriorities(repoName));\n\n    } catch(error) {\n        dispatch({\n\t\t\ttype: GET_ISSUES_FAILURE\n        });\n        dispatch(setLoading(false));\n        dispatch(setError(`There was an error retrieving your issues. ${error}`));\n    }\n};\n\nexport const increasePriority = issueId => dispatch => {\n    dispatch({ type: INCREASE_PRIORITY, payload: { issueId }});\n    dispatch(setIssuesPriorities());\n};\n\nexport const decreasePriority = issueId => dispatch => {\n    dispatch({ type: DECREASE_PRIORITY, payload: { issueId }});\n    dispatch(setIssuesPriorities());\n};\n\nexport const getIssuesPriorities = repoName => dispatch => {\n    const issuesPriorities = JSON.parse(issuesPriorityService.get(repoName));\n    if (issuesPriorities) {\n        dispatch({ type: GET_ISSUES_PRIORITIES, payload: { issuesPriorities }});\n        dispatch(setIssuesPriorities());\n    }\n};\n\nexport const setIssuesPriorities = () => (dispatch, getState) => {\n    const { issues } = getState();\n    issuesPriorityService.set(issues);\n    dispatch({ type: SET_ISSUES_PRIORITIES });\n};\n","import * as type from '../actions/issues.actions';\n\nconst INITIAL_STATE = []\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case type.GET_ISSUES_REQUEST:\n            return [\n                ...state\n            ]\n        case type.GET_ISSUES_SUCCESS:\n            return action.payload.map((issue, index) => ({ ...issue, priority: index + 1 }));\n        case type.GET_ISSUES_FAILURE:\n            return [\n                ...state,\n            ]\n        case type.INCREASE_PRIORITY:\n            const issueIncreased = state.find(issue => issue.id === action.payload.issueId);\n            let issueNegativelyImpacted = state.find(issue => issue.priority === issueIncreased.priority - 1);\n\n            return state.map(issue => {\n                if (issue.id === issueIncreased.id) {\n                    return { ...issue, priority: issue.priority - 1 };\n                } else if (issue.id === issueNegativelyImpacted.id) {\n                    return { ...issue, priority: issue.priority + 1 };\n                }\n                return issue;\n            });\n        case type.DECREASE_PRIORITY:\n            const issueDecreased = state.find(issue => issue.id === action.payload.issueId);\n            const issuePositivelyImpacted = state.find(issue => issue.priority === issueDecreased.priority + 1);\n\n            return state.map(issue => {\n                if (issue.id === issueDecreased.id) {\n                    return { ...issue, priority: issue.priority + 1 };\n                } else if (issue.id === issuePositivelyImpacted.id) {\n                    return { ...issue, priority: issue.priority - 1 };\n                }\n                return issue;\n            });\n        case type.GET_ISSUES_PRIORITIES:\n            const { issuesPriorities } = action.payload;\n            return state.map(issue => {\n                if (issuesPriorities[issue.id]) {\n                    return { ...issue, priority: issuesPriorities[issue.id] };\n                }\n                return issue;\n            });\n        default:\n            return state;\n    }\n }","import * as type from '../actions/repos.actions';\n\nconst INITIAL_STATE = []\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case type.GET_REPOS_REQUEST:\n            return [\n                ...state\n            ]\n        case type.GET_REPOS_SUCCESS:\n            return action.payload.map(({ id, name }) => ({ id, name }))\n        case type.GET_REPOS_FAILURE:\n            return [\n                ...state,\n            ]\n        default:\n            return state;\n    }\n }","import * as type from '../actions/ui.actions';\n\nconst INITIAL_STATE = {\n    error: '',\n    loading: false\n};\n\nexport default (state = INITIAL_STATE, action) => {\n\tswitch (action.type) {\n\t\tcase type.SET_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: action.payload\n            }\n        case type.SET_LOADING:\n            return {\n                ...state,\n                loading: action.payload\n            }\n\t\tdefault:\n\t\t\treturn state;\n\t}\n }","import { getRepos } from './repos.actions';\nimport { setError, setLoading } from './ui.actions';\nimport { apiKeyService, githubApiService } from '../services';\n\nexport const GET_USER_REQUEST = 'GET_USER_REQUEST';\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\nexport const GET_USER_FAILURE = 'GET_USER_FAILURE';\n\nexport const getUser = apiKey => async dispatch => {\n    dispatch({ type: GET_USER_REQUEST });\n    dispatch(setLoading(true));\n\n    try {\n        const body = await githubApiService('user', apiKey);\n        apiKeyService.set(apiKey);\n\n        dispatch({\n\t\t\ttype: GET_USER_SUCCESS, \n\t\t\tpayload: {\n                apiKey: apiKey,\n                githubUsername: body.login\n            } \n        });\n        dispatch(setLoading(false));\n        dispatch(getRepos());\n\n    } catch(error) {\n        dispatch({\n\t\t\ttype: GET_USER_FAILURE\n        });\n        dispatch(setLoading(false));\n        dispatch(setError(`There was an error retrieving your information. ${error}`));\n    }\n};\n","import { setError, setLoading } from './ui.actions';\nimport { githubApiService } from '../services';\n\nexport const GET_REPOS_REQUEST = 'GET_REPOS_REQUEST';\nexport const GET_REPOS_SUCCESS = 'GET_REPOS_SUCCESS';\nexport const GET_REPOS_FAILURE = 'GET_REPOS_FAILURE';\n\nexport const getRepos = () => async (dispatch, getState) => {\n    const { user } = getState();\n\n    dispatch({ type: GET_REPOS_REQUEST });\n    dispatch(setLoading(true));\n\n    try {\n        const body = await githubApiService(`users/${user.githubUsername}/repos`, user.apiKey);\n\n        dispatch({\n            type: GET_REPOS_SUCCESS,\n            payload: body\n        });\n        dispatch(setLoading(false));\n\n    } catch(error) {\n        dispatch({\n\t\t\ttype: GET_REPOS_FAILURE\n        });\n        dispatch(setLoading(false));\n        dispatch(setError(`There was an error retrieving your repositories. ${error}`));\n    }\n};\n","import * as type from '../actions/user.actions';\n\nconst INITIAL_STATE = {}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case type.GET_USER_REQUEST:\n            return {\n                ...state\n            }\n        case type.GET_USER_SUCCESS:\n            return {\n                ...state,\n                ...action.payload\n            }\n        case type.GET_USER_FAILURE:\n            return {\n                ...state,\n            }\n        default:\n            return state;\n    }\n }","import { combineReducers } from 'redux';\nimport issues from './issues.reducer';\nimport repos from './repos.reducer';\nimport ui from './ui.reducer';\nimport user from './user.reducer';\n\nexport default combineReducers({\n    issues,\n    repos,\n    ui,\n    user\n});\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport rootReducer from './reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore() {\n return createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './Button.scss';\n\nconst Button = ({ accessibleText, buttonType, children, selected, type, ...props }) =>\n    <button \n        className={classNames('button', {\n            'button--primary': buttonType === 'primary',\n            'button--secondary': buttonType === 'secondary',\n            'button--icon': buttonType === 'icon',\n            'button--selected': selected\n        })}\n        type={type}\n        {...props}\n    >\n        { buttonType === 'icon' && <span className='accessible-text'>{ accessibleText }</span> }\n        { children }\n    </button>\n\nButton.defaultProps = {\n    accessibleText: '',\n    buttonType: 'primary',\n    selected: false,\n    type: 'button'\n};\n\nButton.propTypes = {\n    accessibleText: PropTypes.string,\n    buttonType: PropTypes.oneOf(['primary', 'secondary', 'icon']),\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.element),\n        PropTypes.element,\n        PropTypes.string\n    ]).isRequired,\n    onClick: PropTypes.func,\n    selected: PropTypes.bool,\n    type: PropTypes.string\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Heading.scss';\n\nconst Heading = ({ children }) =>\n    <h1 className='heading'>{ children }</h1>\n\nHeading.propTypes = {\n    children: PropTypes.string.isRequired\n};\n\nexport default Heading;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './Input.scss';\n\nclass Input extends Component {\n    state = { focused: false };\n    setLabelTop = () => this.state.focused || this.props.value !== '';\n\n    render() {\n        const { label, handleOnChange, id, name, value, type, ...inputProps } = this.props;\n\n        return (\n            <div className='input-wrapper'>\n                <label\n                    className={classNames('input-wrapper__label', {\n                        'input-wrapper__label--top': this.setLabelTop()\n                    })}\n                    htmlFor={id}\n                >\n                    { label }\n                </label>\n                <input\n                    className='input-wrapper__input'\n                    id={id}\n                    name={name || id}\n                    onChange={handleOnChange}\n                    onFocus={() => this.setState({ focused: true })}\n                    onBlur={() => this.setState({ focused: false })}\n                    type={type}\n                    value={value}\n                    {...inputProps}\n                />\n            </div>\n        );\n    }\n}\n\nInput.defaultProps = {\n    name: '',\n    type: 'text',\n    value: ''\n};\n\nInput.propTypes = {\n    handleOnChange: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    type: PropTypes.oneOf(['text', 'email', 'number', 'password']),\n    value: PropTypes.string || PropTypes.number\n}\n\nexport default Input;","import { createSelector } from 'reselect';\n\nconst issuesSelector = ({ issues }) => issues;\n\nconst sortByPriority = (a, b) => { return a.priority - b.priority }\n\nexport const issuesSortedByPriority = createSelector(\n\tissuesSelector,\n\tissues => issues.sort(sortByPriority)\n);\n\nexport const repoHasIssues = createSelector(\n\tissuesSelector,\n\tissues => issues.length > 0\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport moment from 'moment';\nimport { issuesSortedByPriority } from '../../selectors';\nimport { Button } from '../../components';\nimport { decreasePriority, increasePriority } from '../../actions/issues.actions';\nimport './IssuesTable.scss';\n\nconst IssuesTable = ({ decreasePriority, increasePriority, issues }) =>\n    <table className='table'>\n        <thead className='table__head'>\n            <tr className='table__row'>\n                <th className='table__data-standard table__data-assignee'>Assignee</th>\n                <th className='table__data-wide'>Title</th>\n                <th className='table__data-standard table__data-created'>Created</th>\n                <th className='table__data-standard table__data-updated'>Last Updated</th>\n                <th className='table__data-standard table__data-priority'>Priority</th>\n            </tr>\n        </thead>\n        \n        <tbody>\n            { issues.map(issue =>\n                <tr className='table__row' key={issue.id}>\n                    <td className='table__data-standard table__data-assignee'>\n                        { issue.assignee ? <img className='table__image' src={ issue.assignee.avatar_url } alt='avatar' /> : 'None' }\n                    </td>\n                    <td className='table__data-wide'>{ issue.title }</td>\n                    <td className='table__data-standard table__data-created'>{ moment(issue.created_at).format('MM/DD/YYYY') }</td>\n                    <td className='table__data-standard table__data-updated'>{ moment(issue.updated_at).fromNow() }</td>\n                    <td className='table__data-standard table__data-priority'>\n                        <Button\n                            accessibleText='Increase priority'\n                            buttonType='icon' disabled={issue.priority === 1}\n                            onClick={() => increasePriority(issue.id)}\n                        >\n                            +\n                        </Button>\n                        <Button\n                            accessibleText='Decrease priority'\n                            buttonType='icon'\n                            disabled={issue.priority === issues.length}\n                            onClick={() => decreasePriority(issue.id)}\n                        >\n                            -\n                        </Button>\n                    </td>\n                </tr> \n            )}\n        </tbody>\n    </table>\n\nIssuesTable.propTypes = {\n    decreasePriority: PropTypes.func.isRequired,\n    increasePriority: PropTypes.func.isRequired,\n    issues: PropTypes.arrayOf(PropTypes.shape({})).isRequired\n};\n\nconst mapStateToProps = state => ({\n    issues: issuesSortedByPriority(state)\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    decreasePriority,\n    increasePriority\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssuesTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './LinkWrapper.scss';\n\nconst LinkWrapper = ({ children }) => \n    // takes in an anchor tag or (future) a react-router Link as children\n    <div className='link-wrapper'>\n        { children }\n    </div>\n\nLinkWrapper.propTypes = {\n    children: PropTypes.element.isRequired\n};\n\nexport default LinkWrapper;\n","import React from 'react';\nimport './LoadingIndicator.scss'\n\nexport default () =>\n    <div className='loading-indicator'>\n        <div className='loading-indicator__spinner-container'>\n            <div className='loading-indicator__spinner' />\n        </div>\n    </div>","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { getUser } from '../../actions/user.actions';\nimport { Button, Heading, Input, LinkWrapper } from '../index';\nimport './Login.scss';\n\nclass Login extends Component {\n    state = { apiKey: '' }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.getUser(this.state.apiKey);\n    };\n\n    render() {\n        const { apiKey } = this.state;\n\n        return (\n            // TODO: Add Formik and Yup\n            <div className='login'>\n                <div className='login__body'>\n                    <Heading>Login</Heading>\n                    <p className='login__text'>Enter GitHub token to access your GitHub Project Manager</p>\n\n                    <form className='login__form' onSubmit={this.handleSubmit}>\n                        <Input\n                            id='apiKey'\n                            label='GitHub Token'\n                            name='apiKey'\n                            value={apiKey}\n                            type='text'\n                            handleOnChange={event => {this.setState({ apiKey: event.target.value })}}\n                        />\n\n                        <div className='login__action'>\n                            <Button type='submit' buttonType='primary'>Login</Button>\n                        </div>\n                    </form>\n\n                    <LinkWrapper>\n                        <a href=\"https://help.github.com/en/enterprise/2.17/user/articles/creating-a-personal-access-token-for-the-command-line\" target=\"_blank\" rel='noopener noreferrer'>Find out how to obtain a GitHub personal access token</a>\n                    </LinkWrapper>\n                </div>\n            </div>\n        )\n    }\n}\n\nLogin.propTypes = {\n    getUser: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n    getUser\n}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(Login);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './NativeSelect.scss';\n\nconst NativeSelect = ({ handleOnChange, label, options, value }) =>\n    <select\n        className='native-select'\n        value={value}\n        onChange={handleOnChange}\n    >\n        <option value=\"\" disabled={value}>{ label }</option>\n        {options.map(option => (\n            <option key={option.id} value={option.id}>\n                { option.name }\n            </option>\n        ))}\n    </select>\n\nNativeSelect.propTypes = {\n    handleOnChange: PropTypes.func.isRequired,\n    label: PropTypes.string.isRequired,\n    options: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    value: PropTypes.number.isRequired\n};\n\nexport default NativeSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Notification.scss';\n\nconst Notification = ({ children }) =>\n    <div className='notification'>{ children }</div>\n\nNotification.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.element),\n        PropTypes.element,\n        PropTypes.string\n    ]).isRequired\n};\n\nexport default Notification;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport classNames from 'classnames';\nimport { getIssues } from '../../actions/issues.actions';\nimport { repoHasIssues } from '../../selectors';\nimport { Button, Heading, IssuesTable, NativeSelect } from '../../components/index';\nimport './Dashboard.scss';\n\nconst Dashboard = ({ getIssues, hasIssues, repos }) => {\n    const [selectedRepo, setSelectedRepo] = useState(null);\n\n    return (\n        <section className={classNames('dashboard',\n            {\n                'dashboard--center': !selectedRepo,\n                'dashboard--left': selectedRepo\n            }\n        )}>\n            <div className='dashboard__repos-wrapper'>\n                <Heading>Repositories</Heading>\n                <div className='dashboard__select-wrapper'>\n                    <NativeSelect\n                        label=\"repos\"\n                        options={repos}\n                        value={selectedRepo || 0}\n                        handleOnChange={event => {\n                            const repoId = parseInt(event.target.value)\n                            setSelectedRepo(repoId);\n                            getIssues(repos.find(repo => repo.id === repoId).name);\n                        }}\n                    />\n                </div>\n\n                <div className='dashboard__repos'>\n                    { repos.map((repo, index) => {\n                        return (\n                            <div className='dashboard__repos-button' style={{ animationDuration: `${index * 0.25}s` }} key={repo.id}>\n                                <Button\n                                    buttonType='secondary'\n                                    selected={selectedRepo === repo.id}\n                                    type='button'\n                                    onClick={() => {\n                                        setSelectedRepo(repo.id);\n                                        getIssues(repo.name);\n                                    }}\n                                >\n                                    { repo.name }\n                                </Button>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n            <div className='dashboard__issues'>\n                { selectedRepo && !hasIssues && <h2 className='dashboard__issues-heading'>No issues found</h2> }\n                { hasIssues &&\n                    <>\n                        <h2 className='dashboard__issues-heading'>Issues</h2>\n                        <IssuesTable />\n                    </>\n                }\n            </div>\n        </section>\n    )\n}\n\n\nDashboard.propTypes = {\n    getIssues: PropTypes.func.isRequired,\n    hasIssues: PropTypes.bool,\n    repos: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired\n    }))\n};\n\nconst mapStateToProps = ({ repos, ...state }) => ({\n    hasIssues: repoHasIssues(state),\n    repos\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n    getIssues\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { LoadingIndicator, Login, Notification } from './components';\nimport Dashboard from './views/Dashboard/Dashboard';\nimport { getUser } from './actions/user.actions';\nimport { apiKeyService } from './services';\n\nclass App extends Component {\n    state = { checkedExisting: false }\n\n    async componentDidMount() {\n        const existingApiKey = apiKeyService.get();\n        existingApiKey && await this.props.getUser(existingApiKey);\n        this.setState({ checkedExisting: true });\n    }\n\n    render() {\n        const { errorMessage, isLoading, user } = this.props;\n        const { checkedExisting } = this.state;\n\n        return (\n            <div>\n                { errorMessage && <Notification>{ errorMessage }</Notification>}\n                { isLoading && <LoadingIndicator /> }\n\n                { user && <Dashboard /> }\n                { !user && checkedExisting && <Login /> }\n            </div>\n        )\n    }\n}\n\n    \nApp.defaultProps = {\n    errorMessage: '',\n    user: ''\n};\n\nApp.propTypes = {\n    errorMessage: PropTypes.string,\n    getUser: PropTypes.func,\n    isLoading: PropTypes.bool.isRequired,\n    user: PropTypes.string\n};\n\nconst mapStateToProps = ({ ui, user }) => ({\n    errorMessage: ui.error,\n    isLoading: ui.loading,\n    user: user.githubUsername\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getUser\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\n\nimport \"./styles/global.scss\";\nimport App from './App';\n\nReactDOM.render(\n <Provider store={configureStore()}>\n  <App />\n </Provider>,\n document.getElementById('root')\n);"],"sourceRoot":""}